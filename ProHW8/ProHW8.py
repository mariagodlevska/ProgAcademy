# 1. Реалізуйте генераторну функцію, яка повертатиме по одному члену числової послідовності,
# закон якої задається за допомогою функції користувача.
#  Крім цього параметром генераторної функції повинні бути значення першого члена прогресії
#  та кількість членів, що видаються послідовностю.
#  Генератор повинен зупинити свою роботу або по досягненню n-го члена, або при передачі команди на завершення.



# 2. Використовуючи замикання, реалізуйте такий прийом програмування як Мемоізація
# https://en.wikipedia.org/wiki/Memoization .
# Використовуйте отриманий механізм для прискорення функції рекурсивного обчислення n - го члена ряду Фібоначчі.
# Порівняйте швидкість виконання із просто рекурсивним підходом.




# 3. Напишіть функцію, яка застосує до списку чисел довільну функцію користувача
# і поверне суми елементів отриманого списку.

# def cubus(finish, start=1):
#     while start < finish:
#         yield start ** 3
#         start += 3
#
#
# for i in cubus(10):
#     print(i)

def cubus(finish):
    cubes = []
    for start in range(2, finish+1):
        yield start ** 3
        cubes.append(start ** 3)
    return cubes

for i in cubus(10):
    print(i)
